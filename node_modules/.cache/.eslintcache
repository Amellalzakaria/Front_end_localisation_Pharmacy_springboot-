[{"D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\index.js":"1","D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\App.js":"2","D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\reportWebVitals.js":"3","D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\ZoneManagementComponent.js":"4","D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\Zone.js":"5","D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\City.js":"6","D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\Home.js":"7","D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\Navbar.js":"8","D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\Pharmacy.js":"9","D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\Search.js":"10","D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\Map.js":"11"},{"size":535,"mtime":1681831480000,"results":"12","hashOfConfig":"13"},{"size":960,"mtime":1684696852404,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1681831480000,"results":"15","hashOfConfig":"13"},{"size":3910,"mtime":1681831480000,"results":"16","hashOfConfig":"13"},{"size":4943,"mtime":1684692585326,"results":"17","hashOfConfig":"13"},{"size":3913,"mtime":1684691495479,"results":"18","hashOfConfig":"13"},{"size":809,"mtime":1684696745225,"results":"19","hashOfConfig":"13"},{"size":1579,"mtime":1684696891608,"results":"20","hashOfConfig":"13"},{"size":5813,"mtime":1684691407625,"results":"21","hashOfConfig":"13"},{"size":5437,"mtime":1684699349169,"results":"22","hashOfConfig":"13"},{"size":1009,"mtime":1684696933720,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"181cmym",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\index.js",[],[],[],"D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\App.js",["61","62","63","64"],[],"D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\reportWebVitals.js",[],[],"D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\ZoneManagementComponent.js",["65","66","67","68","69","70","71","72"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst ZoneManagementComponent = () => {\n    const [zones, setZones] = useState([]);\n    const [zoneName, setZoneName] = useState('');\n    const [zoneCity, setZoneCity] = useState('');\n    const [zoneId, setZoneId] = useState('');\n    const [showModal, setShowModal] = useState(false);\n    const [cities, setCities] = useState([]);\n    useEffect(() => {\n        fetchZones();\n    }, []);\n    const fetchZones = async () => {\n        try {\n            const response = await axios.get('/api/zones');\n            setZones(response.data);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const handleInputChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'zoneName') {\n            setZoneName(value);\n        } else if (name === 'zoneCity') {\n            setZoneCity(value);\n        }\n    };\n    const handleAddZone = async () => {\n        try {\n            const response = await axios.post('/api/zones/save', {\n                name:\n                    zoneName, city: zoneCity\n            });\n            setZones([...zones, response.data]);\n            setShowModal(false);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const handleEditZone = async (id) => {\n        try {\n            const response = await axios.put(`/api/zones/${id}`, {\n                name:\n                    zoneName, city: zoneCity\n            });\n            const updatedZones = zones.map((zone) => {\n                if (zone.id === id) {\n                    return response.data;\n                }\n                return zone;\n            });\n            setZones(updatedZones);\n            setShowModal(false);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const handleDeleteZone = async (id) => {\n        try {\n            await axios.delete(`/api/zones/${id}`);\n            const updatedZones = zones.filter((zone) => zone.id !== id);\n            setZones(updatedZones);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    const handleOpenModal = (zone) => {\n        if (zone) {\n            setZoneId(zone.id);\n            setZoneName(zone.name);\n            setZoneCity(zone.city);\n        } else {\n            setZoneId('');\n            setZoneName('');\n            setZoneCity('');\n        }\n        setShowModal(true);\n    };\n    const handleCloseModal = () => {\n        setShowModal(false);\n    };\n    return (\n        <div>\n            <h1>Zone Management</h1>\n            <button className=\"btn btn-primary mb-3\" onClick={() =>\n                handleOpenModal()}>\n                Add Zone\n            </button>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>City</th>\n                        <th>Actions</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {zones.map((zone) => (\n                        <tr key={zone.id}>\n                            <td>{zone.name}</td>\n                            <td>{zone.city.name}</td>\n                            <td>\n                                <button className=\"btn btn-secondary me-2\"\n                                    onClick={() => handleOpenModal(zone)}>\n                                    Edit\n                                </button>\n                                <button className=\"btn btn-danger\"\n                                    onClick={() => handleDeleteZone(zone.id)}>\n                                    Delete\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    )\n};\nexport default ZoneManagementComponent;",[],"D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\Zone.js",["73","74"],[],"D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\City.js",["75"],[],"D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\Home.js",[],[],"D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\Navbar.js",[],[],"D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\Pharmacy.js",[],[],"D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\Search.js",["76","77","78"],[],"D:\\project city list backend front end\\React_CityList_with_SpringBoot-Backend-master\\Front-end\\React CityList\\src\\Map.js",[],[],[],{"ruleId":"79","severity":1,"message":"80","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"83","line":1,"column":27,"nodeType":"81","messageId":"82","endLine":1,"endColumn":36},{"ruleId":"79","severity":1,"message":"84","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":13},{"ruleId":"79","severity":1,"message":"85","line":4,"column":40,"nodeType":"81","messageId":"82","endLine":4,"endColumn":44},{"ruleId":"79","severity":1,"message":"86","line":7,"column":12,"nodeType":"81","messageId":"82","endLine":7,"endColumn":18},{"ruleId":"79","severity":1,"message":"87","line":8,"column":12,"nodeType":"81","messageId":"82","endLine":8,"endColumn":21},{"ruleId":"79","severity":1,"message":"88","line":9,"column":12,"nodeType":"81","messageId":"82","endLine":9,"endColumn":18},{"ruleId":"79","severity":1,"message":"89","line":9,"column":20,"nodeType":"81","messageId":"82","endLine":9,"endColumn":29},{"ruleId":"79","severity":1,"message":"90","line":21,"column":11,"nodeType":"81","messageId":"82","endLine":21,"endColumn":28},{"ruleId":"79","severity":1,"message":"91","line":29,"column":11,"nodeType":"81","messageId":"82","endLine":29,"endColumn":24},{"ruleId":"79","severity":1,"message":"92","line":41,"column":11,"nodeType":"81","messageId":"82","endLine":41,"endColumn":25},{"ruleId":"79","severity":1,"message":"93","line":80,"column":11,"nodeType":"81","messageId":"82","endLine":80,"endColumn":27},{"ruleId":"79","severity":1,"message":"94","line":10,"column":18,"nodeType":"81","messageId":"82","endLine":10,"endColumn":27},{"ruleId":"79","severity":1,"message":"95","line":36,"column":13,"nodeType":"81","messageId":"82","endLine":36,"endColumn":17},{"ruleId":"79","severity":1,"message":"96","line":25,"column":15,"nodeType":"81","messageId":"82","endLine":25,"endColumn":18},{"ruleId":"79","severity":1,"message":"97","line":3,"column":41,"nodeType":"81","messageId":"82","endLine":3,"endColumn":58},{"ruleId":"79","severity":1,"message":"98","line":12,"column":10,"nodeType":"81","messageId":"82","endLine":12,"endColumn":26},{"ruleId":"99","severity":1,"message":"100","line":24,"column":6,"nodeType":"101","endLine":24,"endColumn":21,"suggestions":"102"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'zoneId' is assigned a value but never used.","'showModal' is assigned a value but never used.","'cities' is assigned a value but never used.","'setCities' is assigned a value but never used.","'handleInputChange' is assigned a value but never used.","'handleAddZone' is assigned a value but never used.","'handleEditZone' is assigned a value but never used.","'handleCloseModal' is assigned a value but never used.","'setZoneId' is assigned a value but never used.","'zone' is assigned a value but never used.","'cit' is assigned a value but never used.","'DirectionsService' is defined but never used.","'selectedPharmacy' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchZonesByVille'. Either include it or remove the dependency array.","ArrayExpression",["103"],{"desc":"104","fix":"105"},"Update the dependencies array to be: [fetchZonesByVille, selectedVille]",{"range":"106","text":"107"},[845,860],"[fetchZonesByVille, selectedVille]"]